# -*- coding: utf-8 -*-
"""predictionJJM.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1OkF6Nh7BTCEydb5BuEGA8h-wIqOc0zBQ
"""

import pandas as pd
import numpy as np
import pickle

from sklearn.preprocessing import MinMaxScaler, LabelEncoder

path = 'https://raw.githubusercontent.com/dicodingacademy/dicoding_dataset/main/employee/employee_data.csv'
df = pd.read_csv(path)
df = df[df['Attrition'].isna()]

df.drop(columns=['Attrition', 'EmployeeCount', 'Over18', 'StandardHours'], inplace = True)

# Total Satisfaction
df['TotalSatisfaction'] = df['EnvironmentSatisfaction'].astype(int) + df['JobSatisfaction'].astype(int) + df['RelationshipSatisfaction'].astype(int)

# Average Years per Company
df['AvgYearsPerCompany'] = df['TotalWorkingYears'] / (df['NumCompaniesWorked'] + 1)  # +1 untuk menghindari pembagian dengan nol

# Promotion Frequency
df['PromotionFrequency'] = df['YearsAtCompany'] / (df['YearsSinceLastPromotion'] + 1)  # +1 untuk menghindari pembagian dengan nol

# Load model yang sudah dilatih
with open('LR.pkl', 'rb') as model_file:
    model = pickle.load(model_file)

numerical_col = df.select_dtypes(include=[np.number]).columns.tolist()
categorical_col = df.select_dtypes(include=['object']).columns.tolist()

print('Numerical:', numerical_col)
print('Categorical:', categorical_col)

# Fit and transform numerical columns
df[numerical_col] = MinMaxScaler().fit_transform(df[numerical_col])

# Encoding
for col in categorical_col:
    label_encoder = LabelEncoder()
    df[col] = label_encoder.fit_transform(df[col])

# Model akan memprediksi
y_pred = model.predict(df)

print("Hasil Prediksi:\n", y_pred)

# Mengubah y_pred menjadi pandas Series
y_pred = pd.Series(y_pred)
print('Hasil Prediksi\n', y_pred.value_counts())

print('Presentase Label Prediksi\n', y_pred.value_counts(normalize=True))